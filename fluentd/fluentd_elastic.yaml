---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/part-of: logging

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
  - apiGroups: [""]
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
      - describe

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: kube-system

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-@#env#@
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/part-of: logging
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        app.kubernetes.io/name: fluentd
        app.kubernetes.io/version: "1.0"
        app.kubernetes.io/part-of: logging
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: environment
                    operator: In
                    values:
                      - @#env#@
      serviceAccountName: fluentd
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      @#imgpull#@
      containers:
      - name: fluentd
        image: @#acr#@.azurecr.io/fluentd-kubernetes-daemonset:v1-debian-elasticsearch
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: FLUENT_ELASTICSEARCH_HOST
            value: "es-es-http.elastic-system.svc.cluster.local"
          - name: FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "https"
          - name: FLUENT_UID
            value: "0"
          - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
            value: "false"
          - name: FLUENT_ELASTICSEARCH_SSL_VERSION
            value: "TLSv1_2"
          - name: FLUENT_ELASTICSEARCH_USER
            valueFrom:
              secretKeyRef:
                name: fluentd-secret-@#env#@
                key: FLUENT_ELASTICSEARCH_USER
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: fluentd-secret-@#env#@
                key: FLUENT_ELASTICSEARCH_PASSWORD
          - name: FLUENT_ELASTICSEARCH_TEMPLATE_NAME
            value: "pdp-log-index-template"
          - name: FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX
            value: "pdp-@#env#@-applog"
          - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
            value: >
              [
              "/var/log/containers/csi*",
              "/var/log/containers/fluent*",
              "/var/log/containers/ama*",
              "/var/log/containers/kube*",
              "/var/log/containers/azure*",
              "/var/log/containers/kb-*",
              "/var/log/containers/elastic-*",
              "/var/log/containers/nginx*",
              "/var/log/containers/es-*",
              "/var/log/containers/tsc-rec-*",
              "/var/log/containers/cloud*",
              "/var/log/containers/falcon*",
              "/var/log/containers/konnectivity*",
              "/var/log/containers/grafana*"
              ]
          - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
            value: /^(?<time>.+) (?<stream>stdout|stderr)( (?<logtag>.))? (?<log>.*)$/
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: dockercontainerlogdirectory
            mountPath: /var/log/containers
            readOnly: true
          - name: dockerpodlogdirectory
            mountPath: /var/log/pods
            readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: dockercontainerlogdirectory
          hostPath:
            path: /var/log/containers
        - name: dockerpodlogdirectory
          hostPath:
            path: /var/log/pods
